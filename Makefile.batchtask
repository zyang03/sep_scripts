SCRIPTDIR = /home/zyang03/script

ifeq ($(HOSTNAME), cees-rcf.stanford.edu)
SEPQ = sep
PBS_TMPL = ${SCRIPTDIR}/pbs_tmpl_rcf.sh
else  # old cees-cluster
PBS_TMPL = ${SCRIPTDIR}/pbs_tmpl.sh
SEPQ = Q35
endif

clean:
	-rm wrk/* *flist
	-Rm test-all.H

### The basic parameters setup for launching batch tasks using the framework.
### All your own runs should at least contain these parameters.
### Parameters:
###			pbs_template: The PBS shell script template that contains all the boiler-plate content requried by the PBS scheduler. You should NEVER need to change this.
###			YANG_BIN: The path to some utilities used by the framework. You should NEVER need to change this.
###     queues: What queues you want the jobs being submitted to. Usually it will be sep queue and default queue. You need to specify at least one queue.
###			queues_cap: the caps of each queue specified in 'queues='. Here, the cap of a queue means the allowed maximum number of Q-status jobs of *your own*. The framework will keep submitting new jobs to a queue if your current Q-status jobs in that queue has not reached its cap. Once it does reach the cap, the framework will go check for the next queue. If all queues have reached their designated cap, the framework will back off for 30 seconds, before checking them again.
###			path_out: Provided a common workplace to save the intermediate files generated by each subjob.
###			prefix: Provide a prefix for all your jobs in this run. All jobs created in this run will have this prefix in their names. This is useful when you are running two different tasks instead of one.
test: batch_task_executor_test.py
	$< pbs_template=$(PBS_TMPL) YANG_BIN=/data/sep/zyang03/bin \
	  queues=$(SEPQ),default queues_cap=5,20 \
		path_out=wrk prefix=test_bte 

